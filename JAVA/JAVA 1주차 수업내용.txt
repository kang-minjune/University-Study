JAVA수업 내용 

사용 프로그램: JDK

 1주차만 온라인 수업
 2주차부터는 무조건 전부 대면(단, 확진자가 될 경우 무증상이라도 무조건 필수로 1주는 격리 해야 함. 대신 백신을 맞은 밀접접촉자인데 검사에서 음성이 뜨면 등교 가능. 일이 생기면 무조건 전화로 알리기)
         <온라인 참여자가 많다 싶음 온라인으로 강의 영상 업로드 및 대체과제>
 
 -연락처: 010-3679-8947 (김광기 교수님)
 - 메일: k2kim@kaist.ac.kr

 교재
 - 열혈 JAVA 프로그래밍
 - 오렌지미디어, 윤성우, 2017
										대부분 이론 위주로 교육, 시험
 평가
- 출석 20%, 과제 10%, 중간고사 30%, 기말고사 40%
- 추후 변경가능 (퀴즈 또는 실기평가 추가)
(왠만하면 F를 안주는데 받는 경우 3가지) 1. 무단결석 4번 이상 할 시(시스템상) 2.시험 두번 중 한번이라도 미응시 할 시 3.시험볼때 컨닝할 시

상대펑가로 갈 가능성이 높음
A+B : 70%
C 이하 : 30%

강의 목표
- 프로그래밍의 기본 개념 확립

- JAVA의 기본 문법 이해       ┐
			│  (이 두개 위주로 수업)
- 객체지향 프로그래밍 이해 	┘

- JAVA를 이용한 다양한 프로그램 작성 능력 향상


1-1컴퓨터가 실행하는 것

	a. 컴퓨터를 통해 쇼핑을 한다.
		-쇼핑을 위한 설치된 검색기 프로그램 실시
		-검색기의 주소 창에는 자신이 쇼핑을 원하는 쇼핑몰의 주소 입력
		-쇼핑을 한다는 의미: 사용자 컴퓨터의 몇가지의 소프트웨어(프로그램)를 실행시킨 것

	b.컴퓨터를 통해 친구와 대화를 한다.
		-자신의 컴퓨터에 대화를 위한 소프트웨어를 설치
		-대화를 원하는 친구를 등록
		-친구와 대화를 한다는 의미: 사용자가 컴퓨터에 대화전용 소프트웨어를 실행시킨 것

	소프트웨어(프로그램)을 만드는 언어: 프로그램 랭귀지
					프로그램 랭귀지란 무엇일까? 
					>> 사람이 자연어를 입력하면 기계가 기계어(0,1)로 바꿔야 하고 그 기계가 사람한테 전할 떄 다시 자연어로 바꿔야 하는데 사실상 어렵다.
					     이때 공동으로 사용되는 것이 바로 프로그램 랭귀지이다.

2. 프로그램은 어떻게 만들어지는가?

2-1 컴퓨터와 사람의 상호작용
      	
	a. 사람의 언어를 컴퓨터가 인지 : 인공지능(artificial intelligence) 분야에서 이루어졌음
	b. 컴퓨터 언어를 사람이 사용: 사실상 불가능
	c. 사람과 컴퓨터의 공동언어 사용(프로그래밍 언어) : 우리가 배우는 것

2-2 프로그래밍 언어

	- 프로그래밍 언어의 발전 단계에 따른 세대별 구분
             
		Low language                        >>>>>>>>>>			High language

	1세대     2세대       3세대                         4세대                                    5세대
	기계어>>어셈블리>>C,포트란,베이직,코볼등>>비주얼베이직,델파이,파워빌더등>>자바,C++/C#,ASP,PHP등

            (Low와 High의 기준은 사람이 이해할 수 있는 정도를 뜻한다.)

		High에서 Low로 이해시키는 과정 즉 우리가 할 수 있는 언어를 기계가 이해하는 과정을 컴파일이라고 하는데 이 과정에서 문법을 파악한다.

		Low에서 High로 갈 수록 프로그램이 이해하기 쉬워지고 간결해진다.

	(플러스 지식) 2진수로 바꾸는 과정에서 숫자가 클 경우
		     예를 들어 10만이라 칠때 일일히 다 하는 것보단 2의 16제곱(65536)을 뺀 남은 숫자를 2진수를 한다음 그 후에 2의 16제곱까지 계산을 해야 빠름

3.프로그램은 컴퓨터에서 어떻게 실행되는가?

3-1 컴파일(compile) 기법
 
 	- 프로그램이 컴파일러(compiler)에 의해 0과 1로 구성된 이진 파일(0과 1로 구성된 파일)로 번역한 다음, 번역된 파일이 컴퓨터에서 실행되는 기법

3-2 인터프리트(interprete) 기법
 	- 인터프리트(해석) 기법은 인터프리터(interpreter)에 프로그램을 실행시키는 방법

3-3 하이브리드(hybrid) 기법
	- 컴파일 기법과 인터프리트 기법을 모두 사용하는 방식

4 프로그래밍 언어 Java
	
	-컴퓨터는 무엇을 실행?

		*컴퓨터는 소프트웨어를 실행

	-소프트웨어 즉 프로그램은 어떻게 만드는가?

	 	* 개발자가 프로그래밍 언어를 학습하여 하고자 하는 일을 프로그램으로 기술하여 만들 수 있습니다.

	-개발자에 의해 만들어진 프로그램을 컴퓨터가 어떻게 수행?

		*컴퓨터는 번역기나 인터프리터를 사용하여 사용자가 작성한 프로그램을 컴퓨터가 인지할 수 있는 이진 파일로 변환하여 실행

4-1 자바의 개요

	*자바 언어 : 오크(Oak)라는 언어로부터 탄생

	*오크 언어 : 1991년 미국 선(Sun) 마이크로시스템사의 컴퓨터 과학자인 제임스 고슬링에 의해 개발된 언어

	(C언어를 기반으로 만든 언어이기 때문에 상당히 비슷함. 단, 포인터나 메모리 조작을 과감하게 제거하거나 개선 함.) >>하지만 OOP(Object Oriented Programing) 객체지향 프로그래밍 쪽이 어려움.
 		C와 C++을 합친 언어가 JAVA라고 할 수 있음.

	
	*자바의 사용 : 3가지 종류의 플랫폼 제공
		
		- Java 2 ME(모바일 에디션) : PDA나 스마트폰을 위한 개발 환경
		
		- Java 2 SE(스탠다드 에디션) :	클라이언트 중심의 일반적인 자바 응용 프로그램 개발 환경 >>보통 이것을 많이 씀

		- Java 2 EE(엔터프라이즈 에디션) : 서버 중심의 기업용 소프트웨어 개발 환경

4-2 자바 언어의 특징
	1)객체지향언어(OOP)
		- 자바는 완전한 객체지향 언어

		- 객체지향의 특성인 클래스, 상속, 캡슐화, 다형성 등의 개념이 잘 적용된 언어 >>이거 위주로 교육할 예정

		- 객체지향 프로그래밍은 우리가 살아가는 실 세계와 동일한 사고방식의 프로그램 예)객체와 객체 사이에 이루어지는 과정을 코딩 (객체와 객체가 둘다 가능할 때 성립)

	1)객체지향언어 : 자바의 객체 지향의 예

					+객체: 덧셈 기능
			

					- 객체: 뺄셈 기능

		사칙연산 객체 
		
					* 객체: 곱셈 기능
	

					/ 객체: 나눗셈 기능                 >> 확장해서 사칙 뿐만 아니랴 루트, 사인, 코사인도 가능

 	2) 운영 체제에 독립적 : 소프트웨어와 운영체제
 		
		- 컴퓨터의 운영체제 : 하드웨어를 관리하는 시스템 소프트웨어

		- 일반적으로 컴퓨터에서 실행되는 소프트웨어: 운영체제에 종속적

		- 윈도 시스템에서 C 언어로 개발된 소프트웨어는 윈도 시스템에서만 실행
	  	
		- 자바 프로그램 : JVM(Java Virtual Machine : 자바가상머신)이 구축된 컴퓨터에서는

	3) 무료 개발환경 : 선사에서 제공하는 플랫폼의 종류

 	4) 무수한 라이브러리 : 대규모의 라이브러리 클래스 제공

			예) 2의 100제곱 나쁜예)2*2*2*2*..............2* X 좋은예) math.pow(2,100)으로 계산 가능

		
	자바 프로그램의 형태
		- 자바 응용 프로그램
			* C 프로그램과 같이 일반적인 응용 프로그램을 의미

		- 자바 애플릿
			* 웹 검색기상에서 작동하는 프로그램

		- 자바 서블릿(Servlet)
			* 웹 환경에서 실행되는 자바 프로그램                 ┐
									이 두개를 가장 많이 사용할 예정
		- JSP(Java Server Page)		
			* HTML 속에 자바 코드를 삽입하여 사용하는 형태  ┘

		- 자바 빈스(Beans)
			* 자바로 작성한 프로그램들을 부품처럼 사용하여 프로그래밍 하는 방법

2. 자바 프로그램의 실행 환경 
	
	2-1 자바 개발 환경 >> 선사의 홈페이지에서 JDK를 무조건 다운 받아야 한다 (운영체제에 맞게)
		* 자바를 배우기 위해서는 선(Sun)사에서 제공되는 개발 환경과 개발 환경을 기반으로 프로그램을 작성할 수 있게 해주는 이클립스(Eclipse) 소프트웨어의 사용이 필수










 class FirstJavaProgram  >>>클래스 이름 - 클래스 ┌ 변수          로 구성  예) 사과장수>>개수 돈과 같은 과정을 멤버 변수(인스턴트 변수)라고 한다>>파는 행위를 멤버 메소드(인스턴트 메소드)라고 칭함
    	{			             └ 메소드 	
		public static void main(String[] args) >>> main(메소드 이름) - C언어의 함수가 JAVA에서는 메소드를 뜻한다.
		{
			System.out.println("Welcome to Java");                                                                    >>> main 메소드가 클래스 안에 있지만 멤버 메소드가 아니다 
			System.out.println("First Java Program"); 						이유는 static이 붙어있는 이상 멤버 메소드가 아니다
		}											예)집에서 가족같이 생활을 하지만 사실 샛방 살이를 하는거와 같다(하숙집 개념)
	}												**모든 main 메소드는 앞에 public과 static이 붙는다**

					(void는 비어있는걸 뜻함 즉 메소드를 실행했을때 나오는 값이 없다.)
 (String[] args) = 매개변수를 뜻함 예) public static void main(String[] args)
 			         공공의        
			        (접근 제어 지시자)

println에서 ln이 줄바꿈을 뜻한다. (C언어에서는 "\n")


메소드 오버로딩(함수 오버로딩)
      	-여러개의 함수 정의 가능
		- 매개변수의 개수와 자료형이 다르면 여러가지 정의 가능
 