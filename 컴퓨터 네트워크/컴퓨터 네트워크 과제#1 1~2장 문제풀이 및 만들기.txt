1-(1)  전송 효율에 있어서 OSI 모델과 TCP/IP 모델간의 관계성을 설명하시오.

답: 7계층인 OSI 모델과 5계층인 TCP/IP모델을 비교해봤을때 7계층이 5계층으로 줄어들면서 OSI 5~7계층의 정보량을 
TCP/IP의 5계층에 다 담으려면 정보량이 많은 것은 사실이다. 하지만 전송 효율은 헤더량을 따지며 정보량이 많을수록
전송 효율이 떨어진다는 착각을 할 수 있는데, 오히려 반대로 헤더량이 적을수록 전송효율이 올라가기 때문에 정보량과
상관없이 7계층인 OSI모델보다 한 계층에 정보가 몰릴 가능성이 있는 5계층 TCP/IP 모델이 전송 효율면에서 보면 훨씬 
뛰어나다는 것을 알 수 있다.





1-(2) 다음 중 OSI 계층 모델과 TCP/IP 계층 모델에 대한 설명이 아닌 것은?

ㄱ. 두 개의 디바이스 사이의 캡슐화가 진행이 되는 과정에서 경로제어 
기능이 있는 3계층(Network 계층)까지만 디캡슐레이션이 진행된다.

ㄴ. OSI 모델의 3계층(Network 계층)의 주소인 논리주소(logical address)는 TCP/IP 모델로 접어들면서 
IP주소라는 명칭으로도 불리게 된다. 논리 주소와 IP주소가 같는 의미는 동일하다.

ㄷ. TCP/IP 계층에서 물리계층(Physical address)이 주소를 사용하지 않는 것은 비트 패턴에 의미를 부여하는 것가
같기 때문에 사용하지 않는 것이다.

ㄹ. TCP/IP의 모델 중 4계층에 해당하는 Transport 계층은 데이터 단위를 Segment라고 한다.

ㅁ. TCP/IP 모델은 OSI 모델이 나온 이후에 짜여진 모델이다.




정답) ㅁ

해설) 
ㄱ. 두개의 디바이스 사이의 캡슐화가 진행 되는 과정에서 경로제어 기능이 있는 3계층(Network 계층)까지만 디캡슐레이션이 진행이 되는게 옳다.
그 이유는 7계층까지 디캡슐레이션이 되면 시간도 더 오래걸릴 뿐더러 데이터 정보의 보안상 문제가 될 수 있기 때문에
경로제어 기능이 있는 3계층까지만 디캡슐레이션이 진행된다.

ㄴ. OSI 모델의 3계층(Network 계층)의 주소인 논리주소(logical address)는 TCP/IP 모델로 접어들면서 
IP라는 또 다른 명칭으로 불리고 있다. 논리주소는 소프트웨어적으로 응용이 가능한 것을 뜻하며, 이를 TCP/IP 모델에
접어 들면서 IP주소로 불리게 됨. 둘이 같고 있는 의미는 동일한게 맞다.

ㄷ. TCP/IP 계층에서 물리계층(Physical address)이 주소를 사용하지 않는 것은 이전 OSI 모델 중 물리 계층이 구조화
되지 않았다는 것과 동일한 맥락으로 비트 패턴에 의미를 부여하는 것과 같아지기 때문에 사용하지 않는 것이다.

ㄹ. TCP/IP모델에서 각 계층 별 데이터 단위를 살펴보자면  2계층(은 Frame 3계층은 Packets 또는 Datagram 
4계층은 Segment 5계층은 Message라고 칭한다. 이로써 4계층의 데이터 단위는 Segment가 맞다.


ㅁ. TCP/IP모델이 OSI모델보다 함축된 계층으로 보여진다고 하여 늦게 짜여진 것이 아니라 원래 만들어지고 있던 TCP/IP모델을
더 세분화 시켜서 먼저 나오게 된 모델이 바로 7계층으로 이루어진 OSI 모델이다. 한마디로 위 보기는 틀린 말이다.




1-(3) 공식적인 서비스에 대해 할당된 번호를 뜻한다. 개인적인 어플리케이션 개발, 개인 업체 등에는 
할당 되지 않는 16bits(0~65535) 범위 중 1023 이하에 해당하는 이것은 무엇이며 예를 2가지 이상 쓰시오.

답) Well known Prot number , 예) Telnet, SMTP, POP3, SSH, Ex.FTP 등이 있다.





1-(4) 해당빈칸을 채우시오.
ㄱ. MAC address : 물리 주소 , L2 주소
   - 링크 상에서 NIC (Network Interface Card) 구별
   - 48bits = (   ⓐ    )(24 bits) + (   ⓑ    )(24 bits)

ㄴ. Frame 2 계층 : (        ⓐ       ) & ( 	    ⓑ	)
    Segment 4 계층 : (      ⓒ      )
    Message 5 계층 : (      ⓓ       )

답) 
     ㄱ. 해답)
	ⓐ OUI code
	ⓑ Serial

     ㄴ. 해답)	
	ⓐ 물리주소(Physical addresses) 
	ⓑ MAC 주소 (MAC addresses)
	ⓒ 포트 주소(Port addresses) >>> 추가정보: 포트 번호라고 더 만이 불린다.
	ⓓ 도메인 주소 (Domain name addresses) 




1-(5) Network 계층에 대한 설명이 아닌 것은?
	ㄱ. 데이터 단위를 Packets이라 부른다.
	ㄴ. Packet을 전달함에 있어서 연결형으로 보내는 것을 Datagram이라 칭한다.
	ㄷ. 이 계층에서 사용하는 주소를 IP주소라고 한다.
	ㄹ. 이 계층에서는 경로제어 기능 즉, 라우터의 역할이 정보 통신에 있어서 중요한 역할을 한다.
	

해답) ㄴ
풀이) 
	ㄱ. Network 계층에서의 데이터 단위를 Packets 또는 Datagram이라고 한다. 옳바른 보기이다.

	ㄴ. Packet을 전달함에 있어서 연결형으로 보내는 것을 Datagram이라 칭한다.
	    틀린 보기이다. 이것은 실제 데이터를 전달하기 전에 송수신간의 미리 연결된 데이터의 전송 유/무 
	    차이인데, Datagram 입장을 고려했을 때 이는 Packet 교환에 있어서, 데이터 단말 장치와 망과의 사전 접속 
	    절차에 의하지 않고, Packet 개개인이 경로 지정을 위한 충분한 정보를 갖고 있기에 사실상 비연결형으로 보내는 
	    것이 적합하다고 할 수 있다.

	ㄷ. 이 계층에서 사용하는 주소를 IP주소 (logical addresses)라고 부르는 것이 맞다. 옳바른 보기이다.

	ㄹ. 이 계층에서는 경로제어 기능 즉, 라우터의 역할이 정보 통신에 있어서 중요한 역할을 한다. 라우터의 기능을 라우팅이라고
	     부른다. 라우팅은 들어온 Packet을 어느 경로로 출력을 해야 효과적일지 결정해준다. 옳바른 보기이다.





2-1 OSI 7계층을 1계층부터 7계층까지 나열하고 각각에 대해 설명하라.

먼저 1계층을 보면 아직 구조화 되지 않은 계층이기에 비트를 잘 전송하는
것이 목적인 계층으로 물리 매체를 통하여 전송하기 위한 기계, 기능, 절차적으로
스펙을 정의함으로써 비트를 전달하는 것 즉, 비트스트림이 전송 과정이라 할 수 있다.
여기서 핵심은 아직 구조화 되지 않은 데이터가 키워드라 할 수 있다.

두번째로 2계층(Data link 계층)을 설명드리자면, 구조화가 시작되는 처음 시작되는 계층이다.
여기서부터는 데이터가 구조화 되는데 그것을 Frame이라고 칭한다. 이는 인접노드간 신뢰성을 높이기 위해 보류제어, 흐름제어와 같은 
전송제어를 담당하는 역할을 하는 계층이다. 여기서 인접노드란 하나의 링크 단위로 이어진 가장 서로 인접한 위치에 있는 노드들을 말한다.
링크 단위를 따로 부르는 명칭이 있는데 그것을 홉 단위라고도 해서 링크 단위(link by link) = 홉 단위(hop by hop)이라는 관계가 형성이 된다.
여기서 한가지 더 중요한 것이 Frame이라는 데이터에는 송/수신자 주소필드가 들어가게 되는데
이를 물리주소(Physical addresses) 또는 맥 주소(MAC addresses)라고 부른다.

세번째는 3계층(Network 계층)을 설명 드릴건데, 여기서 책임지는 데이터 전송 단위를 packets이라고 부른다.
좀 더 광범위해질 가능성이 있지만 일단 OSI모델에서는 Packets이라 부른다.
3계층의 가장 중요한 역할 혹은 기능은 통시자에서 목적지까지 Network를 통해 데이터를 보낼 수 
있는 가장 최적화 된 기능을 찾는 역할이다. 또한 가장 핵심기능이라 할 수 있는 것은 경로제어를 말 할수 있다.
packets에서 송/수신자의 주소는 논리주소(Logical addresses)라 하는데, 2계층과 차이점이 드러난다.
Data link 계층의 주소인 맥주소는 Network 인터페이스 카드에 주소가 지정되어 있어 정해져 있는 반면에,
Network 계층의 논리주소는 packets에 들어가는 주소에 따라 다양하게 설정이 가능하기에 정보엔 논리가 따른다 하여
논리 주소라고 지은 것이다.

네번째 계층인 transport 계층은 핵심적인 내용이 있다. 바로 양 끝 즉 end to end 통신이 존재하는데,
양 끝단간의 신뢰성 있는 데이터를 전송하는 계층이란 역할에 있어서는 2계층과 동일하다.
하지만 여기서 차이점이 있는데 Data link 계층은 링크 단위(홉 단위)로 전송제어를 담당해서 인접해 있는
노드가 있으면 링크로 이어진다. 하지만 4계층인 transport계층에서는 위에서 말했지만 end to end가 존재하기 때문에
양 끝과 끝단 만의 전송제어를 담당한다는 큰 차이점이 있습니다.
여기서 말하는 end는 그냥 양 끝이라는 것에 멈추는게 아니라 process를 의미하기도 하는데, 
다시 말해 process와 process 사이의 전송제어를 담당한다고 말 할수도 있습니다.
(예를 들어보자면 다양한 소프트웨어 또는 프로그램을 실행할 때 4계층은 컴퓨터와 컴퓨터 사이가 아니라 프로세서에서 프로세서간의 전송제어를 담당)

다섯번째 Session계층을 설명드리자면 응용 즉 application간의 커뮤니케이션 또는 세션을 구성하고 통신 방식을 결정하는 계층으로써
통신방식은 크게 단방향/양방향 두개로 나뉜다. 단방향은 말 그대로 일방적인 통신 방식을 뜻하고 양방향은 한 순간에 송/수신 중 하나를 하는 반이중 통신,
동시에 하는 전이중 통신이 있다. 여기서 중요한 점을 정리해보자면 응용간의 어떠한 방식의 통신을 대화로 풀어나갈 것인지 결정하는 계층을 5계층 즉, 
Session계층이라고 한다.

여섯번째 Presentation 계층을 설명 드릴건데, 이 계층은 표현 계층이라고도 부른다. 응용간에 대화를 할때 데이터 표현을 어떻게 할 것인가를 담당하는 계층이다.
여기서 데이터를 표현하기 위한 예로는 코딩 방식, 압축 방식, 암호화 방식 모두 표현계층에 포함이 되는 것이라 할 수 있다.

마지막으로 7계층 Application 계층은 응용계층이라고 부르는데, 사용자로 하여 이런 환경에 접속해서 
통신기능들을 사용할 수 있도록 응용 인터페이스를 제공하는 계층이다.






2-2 캡슐화 (SDU,PCI,PDU,SAP)과정에 대해 설명하라.

먼저 강의에 나왔던 식을 예로 들어보자면, (N)-PDU = (N)-SDU + (N)-PCI라는 식을 봤을때 

	N+1			 > N+1 계층이 가지는 데이터가 N 계층으로 내려오게 될 때
	ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ   데이터가 밑으로 내려오면 N 계층에서는 자기의 기능을 보유해주기 위해
	N			   상위 계층으로부터 받은 데이터의 헤더를 추가 하게 됨.
	ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ   N 계층의 어떤 기능들은 자기가 붙여놓은 헤더의 필드로서 정의되어져서 들어감
	N-1			   역시 N계층에서 N-1계층으로 내려올때 N-1 계층의 고유의 기능을 헤더로 정의해
	ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ   내려받은 데이터에 붙이게 됨


N+1 > N :  N 계층의 서비스 데이터 단위{(N)-SDU}
여기서 (N)-SDU의 헤더를 붙이는 것을 PCI (Protocol Control Information)이라고 함.
				
또한 N 계층의 관점에서 보면 N 계층의 SDU와 PCI가 합쳐지는 전체 데이터를 N계층의 PDU{(N)-PDU}라고함

이래서 즉, 위의 >(N)-PDU = (N)-SDU + (N)-PCI가 성립이 된다



위와 같은 원리로  N-1계층의 SDU {(N-1)-SDU} 에다가 N-1계층의 PCI {(N-1)-PCI}를 붙이면
			
이 전체는 N-1계층의 PDU {(N-1)-PDU}가 되는 것이다. 즉, (N-1)-PDU = (N-1)-SDU + (N-1)-PCI 가 성립된다.

			
따라서,  (N)-PDU= (N-1)-SDU 가 성립된다.

여기서 계층과 계층 사이 데이터가 전달되는 이른바 전달 인터페이스를 SAP(서비스 엑세스 포인트)라고 부른다.


위 설명에 덧 붙이자면 상위 계층에서 하위 계층으로 내려오는 과정을 캡슐화(Encapsulation)라고 하는데, 이것을 OSI 7계층 구조로 예를 들어보자면 

1.물리계층 >>> 2.데이터 링크 계층 >>> 3. Network 계층 >>>...........>>>7. 응용계층을 봤을때

7계층부터 1계층 방향으로 캡슐화 즉, 인캡슐레이션이 적용이 되는데 7계층에서 외부의 데이터 정보를 받게 된다고 했을때, 인캡슐레이션 과정에서 붙는 헤더를 PCI라 부르기로 하였고
원래 보유하고 있던 application계층의 SDU가 만나 application을 A로 치환을 하면, 다음과 같은 식이 위 설명과 동일하게 (A)-PDU = (A)-SDU + (A)-PCI가 성립이 되는 것을 알 수 있다.
현재까지 이루어진 인캡슐레이션 과정의 전체가 PDU라고 하는 것을 위 설명과 동일하게 알수 있는데, 그 (A)-PDU가 다시 캡슐화 되어서 바로 아래 계층인 6계층의 SDU(7계층으로부터 받은 데이터)로 담기게 되고 
새로운 헤더 즉 PCI가 붙어 또 다른 (6계층)-PDU가 생성이 된다. 이 캡슐화 과정들이 쭉 진행되고 나중에 디캡슐레이션 되어서 데이터 정보가 전송이 되는 것이다.

위 설명을 정리해보자면 데이터가 7계층으로 전송이 되면 그 데이터로 이루어지는 7계층 고유의 (7)-SDU가 형성이 된다.
캡슐화가 이루어질테며 여기서 붙는 이 (7)-SDU에 붙는 헤더를 (7)-PCI라고 부르기로 한 것이다. 즉, 위 N계층 설명에 대입을 시키면
(N)-PDU = (N)-SDU + (N)-PCI가 성립이 되듯이 (7)-PDU = (7)-SDU + (7)-PCI도 성립 한다는 것이다. 더불어 이러한 (7)-PDU라는 정보가
인캡슐레이션 즉, 캡슐화가 되어서 6계층으로 전송이 된다면 위 설명과 같이 7계층의 정보들로 6계층 고유의 SDU가 형성이 되는데 
여기서 또 하나의 SDU 즉 (6)-SDU가 만들어지는 것이다. 동일하게 헤더가 붙고 우리는 그것을 (6)-PCI로 부를 것이며 그 전체를 (6)-PDI라고 할 것이다.
즉, 6계층에서도 (6)-PDU = (6)-SDU + (6)-PCI이 성립이 된다. 아래계층(1~5 계층)에서도 동일하게 적용!!!

