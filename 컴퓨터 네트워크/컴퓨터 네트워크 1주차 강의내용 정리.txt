컴퓨터 네트워크 1주차 내용 정리

평가
 -중간고사: 30%
 -기말고사: 30%
 -출석:20%
 -과제:20%
 -기타:±5%

교재
     * 주교재
	-TCP/IP 프로토콜(4판)
	-Behrouz A. Forouzan
	저/ 김병철 등 역	
	-한국맥그로힐 (McGraw Hill Korea)

     * 강의 PPT 파일
	- 강의록 제본

    * 실습 S/W
	- Wireshark

제 1장 개요
1.1
강의 개요 	
- 인터넷의 기본 프로토콜인 TCP/IP에 대해 학습함으로써 인터넷의 동작 원리
및 기술 동향에 대해 학습한다.

컴퓨텨네트워크 관련 커리큘럼
* 2학년 1학기: 컴퓨터네트워크 1         ┐  TCP/IP라는 과목을 이수를 해야 
* 2학년 2학기: 컴퓨터네트워크응용      ┘  3학년 들어가서 도움이 된다.
* 3학년 1학기: 시스코네트워크
* 3학년 2학기: 네트워크프로그래밍

*보안 관련 과목들
	-정보보호개론
	-네트워크보안실무

1.2 프로토콜과 표준
 * 프로토콜(Protocol)
	>통신규약
	>프로토콜의 3요소
	*구문:데이터의 구조와 형식, 사용하는 코드의 종류
	*의미:구문에서 데이터의 형식을 여러가지 필드로 나누는데, 각 필드의
		비트 패턴이 어떤 의미를 가지는가
	*타이밍:데이터를 전송할때 전송 속도, 동기

 *표준(두개의 호스트의 제 3자가 늘어날때 프로토콜이 표준(standard)화 되어야
모든 호스트가 일반 로드들을 통해 공식적인 프로토콜 혹은 프로토콜을 일반화 되는 것)

	>사실 표준 : 특정된 컴퓨터의 운영체제 이지만 시장에서는 사실상
	표준으로 받아들이는 것
	>법률 표준(공식 표준) : 예)우리나라 KS표준 - 법률적으로 공식적으로 정해놓은 표준.
	국제적으로는 예) ITO국제전기통신 연합에서 정한 표준.
	우리나라의 통신관련 TTA(정보통신기술협회) 제정한 표준들은 사실보단 법률에 적합.

1.3 인터넷 표준(internet society)
	*RFC 완성 단계(Maturity Levels)

	*RFC 문서 검색
		>http://www.faqs.org/rfcs
		>http://www.rfc-editor.org

1.4 인터넷 관리
	*인터넷 조직(Internet administration)
		ISOC
		
		IAB
          [IRTF] 		 [IETF]
	      IRSG			IESG
		 	    Area	  ...    Area
	RG     ...   RG	WG ... WG     WG ... WG

1.4 인터넷 관리(계속)
	*IANA(Internet Assigned Numbers Authority)
	  > 1998년 10월까지 인터넷 도메인 네임과 주소 관리 책임
	  > 미국 정부의 지원
	
	*ICANN(Internet Corporation for Assigned Names and Numbers)
	  > 사설 비영리 법인

	*NIC(Network Information Center)
	>http://www.krnic.or.kr 		cf.InterNIC
	>국내 인터넷 현황
	   * http://isis.kisa.or.kr   ex. 현재 국내 ISP 수는?
	


제 2장 OSI 모델과 TCP/IP 프로토콜

2.1 & 2.2 OSI 모델
	* OSI 모델: 1970년 후반 ISO에 의해서 만들어진 통신 참조모델
	통신이나 네트워크에 있어서 아주 기본적인 개념

	총 7계층으로 설명
			(layer)
                      1계층>>>>>>>>>>>>>>>>>7계층
1	2	3	4	5          6	   7
Physical>Data link>Network>Transport>Session>Presentation>Application

1. Physical(물리) 계층 : 구조화 되지 않은 비트스트림을 물리 매체를 통하여 전송하기 위한
기계적,기능적,전기적,절차적 스펙을 정의하는 계층

여기서 구조화 되지 않았다란? 데이터들을 어떠한 packets이나 Frame 같은 
데이터 형식을 정의 하지 않았다라는 뜻

단지 비트 스트림 즉, 비트를 잘 전송하는게 목적인 계층




2. Data link 계층 : 데이터 구조화, 2계층에서 구조화된 데이터를 Frame이라함

2계층에서는 Frame을 인접노드간의 신뢰성 있게 전송하기 위한 보류제어,흐름제어와
같은 전송제어를 담당하는 계층

여기서 인접노드란 하나의 링크 단위로 이어진 인접한 노드를 말함 (노드와 노드 사이가 
이어지는 것을 홉이라 함)

**링크 단위 = 홉 단위**
(link by link)  (hop by hop)

Frame이라는 데이터에는: 송신자와 수신자 주소필드가 들어감
>Physical address(물리 주소) or Map Address(맵 주소) 라고 한다


 

3. Network 계층 : 3계층에서 책임지는 데이터 전송 단위를 packets이라 부름
이것은 경우에 따라 조금더 광범위하게 쓰이지만 여기선 packets이라 부름

3계층에서 가장 중요한 기능은 통신자에서 목적지까지 Network를 통해서
데이터를 보낼 수 있도록 가장 최적의 기능을 찾는 기능이다.

*********여기서 핵심기능은 경로제어라 한다.**********

packets에서 송신자와 수신자의 주소: 논리주소(logical address) 

맵 주소는 네트워크 인터페이스 카드에 주소가 지정되어 있어서 물리라 하는 반면
packets에 들어가는 주소는 설정이 가능하기 때문에 논리주소라 한다.




4. Transport 계층 : 4계층에서는 통신을 하는 양 쪽 끝단(end to end 통신)
간의 신뢰성 있는 데이터 전송을 담당하는 계층 (2계층과 동일)

똑같은 전송제어를 한다 하더라도
2계층은 링크 단위(홉 단위로) 전송제어를 담당 하는 반면, 
4계층은 양 쪽 끝단 만의 전송제어를 담당 (두 제어의 차이점)

여기서 말하는 end란 양 쪽 끝단의 단말이 아니라 process를 의미한다.

(예를 들어서 여러가지 소프트웨어 혹은 프로그램을 실행할 때 4계층은
컴퓨터와 컴퓨터 사이가 아니라 프로세서에서 프로세서간의 전송제어를 담당)



5. Session 계층 : 응용간의 즉 application간의 대화 혹은 세션을 구성하고 통신 방식을 결정하는 세션 계층

	여기서 통신방식은 크게 
		1. 단방향 통신:
		2. 양방향 통신: 한 순간의 송신이나 수신 중 하나를 할 수 있는 반이중 통신,
		동시에 송신과 수신을 할 수 있는 전이중 통신이 있다.

 >>애플리케이션(응용)간의 어떠한 통신 방식을 통해서 대화를 할 것인지 결정하는 계층을 5(Session) 계층이라 함.




6. Presentation 계층(표현 계층) : 응용간에 대화를 할때 데이터를 어떻게 표현할 것인가 즉, 데이터 표현에 관련된 기능을 담당하는 계층
그래서 presentation계층을 표현계층이라고도 한다. 

여기서 데이터를 표현하기 위한 코딩 방식, 압축 방식, 암호화 방식 모두 표현계층에 포함.




7. Application(응용) 계층 : 사용자로 하여금 이러한 OSI 환경에 접속해서 
이러한 통신기능들을 사용할 수 있도록 사용자에게 응용 인터페이스를 제공하는 계층

**위 계층들을 설명을 들었지만 부족하기에 책에 있는 내용들을 반복적으로 읽어놓길 권고함**
(다양한 자료들을 검색해보는 것도 좋음)



* 계층구조 >> 캡슐화(Encapsulation)
 >(N) - PDU = (N)-SDU + (N)-PCI

통신기능이 계층화 되어있는것이 어떤 의미를 가지는가?

	N+1			 > N+1 계층이 가지는 데이터가 N 계층으로 내려오게 될 때
	ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ   데이터가 밑으로 내려오면 N 계층에서는 자기의 기능을 보유해주기 위해
	N			   상위 계층으로부터 받은 데이터의 헤더를 추가 하게 됨.
	ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ   N 계층의 어떤 기능들은 자기가 붙여놓은 헤더의 필드로서 정의되어져서 들어감
	N-1			   역시 N계층에서 N-1계층으로 내려올때 N-1 계층의 고유의 기능을 헤더로 정의해
	ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ   내려받은 데이터에 붙이게 됨


					상위 계층 >>>>>>>>>>> 하위 계층 으로 하달 되는 과정을 
					캡슐화(Encapsulation)라고 함.


 			N+1 > N : N 계층의 서비스 데이터 단위{(N)-SDU}
					여기서 (N)-SDU의 헤더를 붙이는 것을 PCI (Protocol Control Information)이라고 함.
				
				또한 N 계층의 관점에서 보면 N 계층의 SDU와 PCI가 합쳐지는 전체 데이터를 N계층의 PDU{(N)-PDU}라고함

  				이래서 즉, 위의 >(N) - PDU = (N)-SDU + (N)-PCI가 성립이 된다.


    
			N > N-1 : N 계층의 PDU를 N-1 계층에서는 N-1계층의 SDU{(N-1)-SDU}가 된다.
				
			위와 같은 원리로  N-1계층의 SDU {(N-1)-SDU} 에다가 N-1계층의 PCI {(N-1)-PCI}를 붙이면
			
				이 전체는 N-1계층의 PDU {(N-1)-PDU}가 되는 것이다.

				즉, (N-1)-PDU = (N-1)-SDU + (N-1)-PCI 가 성립된다.

			
			따라서,  (N)-PDU= (N-1)-SDU 가 성립된다.




7계층 >>>>>>1계층 순서로 먼저 헤더를 붙이는 과정을 캡슐화(Encapsulation) 이라 하고

end 시스템(프로세서)과 end 시스템(프로세서) 사이를 통신링크를 통해 데이터가 넘어가서 다시

1계층>>>>>>>7계층으로 올라감으로써 원래의 온라인 데이터를 찾아가는 과정에서 이전에 붙였던
헤더들을 다시 제거하는 과정을 디캡슐레이션(Decapsulation)이라 한다



예) 카톡으로 "안녕"을 보내면 "안녕"이라는 데이터만 오지만 실제로는 
그 말의 응용 데이터, 유저 데이터 외의 송수신 주소, 포트 번호, 에러제어, 응용제어 및 
여러가지 헤더정보들이 붙어 있지만 통신 과정에서 그 헤더들이 붙고 떼어지는 과정을 사람들은 인지할 수 없다.
허나 실제로는 위 과정이 일어난다는 것이 사실이다.

+지식) 계층과 계층 사이 데이터의 전달 인터페이스를 SAP(서비스 엑세스 포인트)라고 부름.






* OSI계층 구조

A 디바이스와 B 사이의 인캡슐레이션&디켑슐레이션 과정에서 중간노드를 라우터(R)?라고 생각
A >>>>>ㅁ>>>>>>>>ㅁ>>>>>>B
           (R1)             (R2)                     

				      그림은 교재의 OSI계층 구조 페이지 참조!!
				     (A디바이스에서 B디바이스까지의 송신 과정)
	아무튼 내려오면서 헤더가 붙는 것을 인캡슐레이션(캡슐화),
	올라가면서 헤더가 떨어지고 원래의 데이터를 찾는 과정을 디캡슐레이션이라 함.

이전 그림과 동일하지만 여기서 한가지 주의 깊게 봐야 할 점은!!

>> 구간에 있는 라우터 단에서는 데이터가 7계층까지 일어나는 것이 아닌 3계층 까지만 이러한
인캡슐레이션과 디캡슐레이션이 일어난다는 점!!

이유는???? 

*앞 각 계층별 기능에 대해 이해할 필요가 있는데, 중간의 라우터(R)라는 장비의 기본 기능을 알아보자면
글자 그대로 라우팅을 하는 디바이스이다. 라우팅 즉, 경로제어는 3계층(Network 계층)기능이므로
3계층 즉, 네트워크 계층 까지만 디캡슐레이션 까지만 이루어진다. 그 이후에 반대로 인캡슐레이션 과정이 또 이루어진다.


만약 7계층까지 디캡슐레이션이 이루어진다면???

A 디바이스가 "안녕" 을 보냈다고 했을때 만약 7계층까지 디캡슐레이션이 이루어졌다면
라우터 단이 "안녕"이라는 메시지를 확인하는 꼴이 된다. 이것은 기술적으로 필요성도 없지만
프라이버시나 정보 보안에 있어서 심각한 문제가 된다.




* OSI 모델을 이용한 교환(Encapsulation)
 참고로 특히 2계층에서는 헤더 뿐만 아니라 테일(tail)이라 그래서 뒤 꼬리쪽에도 부가 정보를 붙히는 것을 알아둬야 함.

 //사진첨부(ㄱ-1 참조)
 


2.3 TCP/IP 프로토콜

	*TCP/IP와 OSI 모델
 
	*OSI 모델의 물리계층(7계층) 	*TCP/IP 프로토콜 스택의 논리계층(5계층)
	Application	
	Presentation 		Application
	Session		
	Transport			Transport
	Network			Network
	Data link			Data link
	Physical			Physical


위 표를 보면 Physical ~ Transport 레이어는 1대 1 맵핑(mapping) 관계에 있는 것을 알 수 있다.
즉, 위 두 상관관계는 거의 동일하다라고 보여진다. 심지어 1~5 계층은 두 스택이 동일한 기능을 가진다고 할 수 있다.

하지만 차이점은 무엇일까?
7계층은 5,6,7 세개로 나뉘던 계층을 5계층에서는 7계층 즉 Application하나의 계층으로 통합된 것을 볼 수 있다.
즉, 7계층에서는 정보가 나뉘지만 5계층에서는 이 세 계층의 정보가 통합되는 것으로 보여진다.

여기서 생각할 점은!
7계층 모델을 5계층 모델로 줄였을때 전송 효율 관점은 어떤 모델이 더 유리할까?

전송 효율 즉, 어떤 모델이 더 많은 헤더(부가 정보)를 필요로 한다라는 점인데, 
원래 사용자에 비해 부가 정보가 많을수록 전송 효율은 떨어지기 마련.

7계층과 5계층 모델 중 어떤 것이 더 많은 부가 정보를 필요로 할까?
계층이 많을수록 더 많은 인캡슐레이션 과정을 거친다고 하였는데
그 말은 헤더량이 더 늘어나기 때문에 전송 효율은 더 떨어진다고 이해할 수 있다.

즉, 이해하기로는 7계층(OSI 모델의 물리계층)보다 5계층(*TCP/IP 프로토콜 스택의 논리계층)가
계층이 더 적다는 것은 인캡슐레이션 과정이 더 적다는 것으로 판단되어 헤더량이 상대적으로 적어
전송 효율은 더 올라와 있다는 것을 알 수 있다.

대신 5계층의 Application계층(A)이 7계층의 Application계층(B)보다 훨씬 더 많은 기능을 필요로 하는 것을 알 수 있다.


그 이유는? A가 B보다 계층이 적고 A가 7계층의 5,6,7계층의 정보를 다 갖고 있어야 하기에 기능적으로 
우월해야 하는 것은 당연하다고 여겨지기 때문이다.

* TCP/IP와 OSI 모델의 관계(계속)

  //사진첨부(ㄱ-2 참조)

[사진 설명]
TCP/IP 모델의 대표적 
1~2 계층에 해당하는 기술은 책 3장에서 다룰 예정

3계층에 해당하는 기술은 책 4장에서 다룰 예정
	(예로는 IP계층 또한 ICMP/IGMP,ARP/RARP와 같은 프로토콜들이 대표적)

4계층의 대표적인 예시는 TCP,UDP,SCTP가 대표적

5계층의 대표적인 예시(Applications)는 
SMTP(이메일을 보낼때 사용), FTP(파일 전송을 위함), TELNET(원격 접속을 위함), DNS(도메인 네임 서비스를 위함),
SNMP(네트워크 관리를 위함), NFS(네트워크 파일 시스템)<RPC(원격 프로시즈 콜), TFTP(트리비어 FTP) 등이 대표적

*****참고로 이번학기 우리가 할 내용은 Transport 계층의 TCP,UDP까지이다.*****
     (SCTP는 시간관계상 2학기 컴퓨터 네트워크 응용 과목에서 다룰 예정)
  + Applications에 포함한 여러가지 다양한 응용계층 프로토콜들도 그럴 예정



2.3 TCP/IP 프로토콜(계속)

 	 //사진첨부(ㄱ-3 참조)

[사진 설명]
link 1에 속해있는 호스트 A가 송신자 link 6에 있는 호스트 B가 도착지라 봤을때
 중간에 R1, R2, ..... 이 라우터를 의미(라우팅 기능 가짐)

그리고 중간의 직육면체로 보이는 것들은 1계층과 2계층 까지 동작을 하는 스위치라고 이해하면 됨.
 


그림 2.10에서 보여주는 것은 네트워크 구조에서 물리 계층 관점에서 데이터 흐름을 따라가 볼때
 여기서 물리 계층은 프레임 등으로 수행하지 않고 비트의 흐름만을 책임지는데, 

호스트 A에서 라우터 1(R1)까지 물리매채를 통해 링크를 타고 비트들이 흐른 것을 볼 수 있고,
R1에서 R3까지 비트 스트림이 흐르고 R3 에서 R4까지 마지막 최종적으로 비트스트림이 R3에서 R4에 도착을 하는 것을 볼 수 있다.

이 데이터 공식은 물리계층에서 바라본 관점이다!!

반대로 앞에서 살펴본 물리계층의 흐름을 이계층 관점에서 바라보면

	//사진첨부(ㄱ-4 참조)

그림 2.11 데이터링크 계층 통신 > Frame 그림을 보면

동일한 통신을 이계층 관점에서 바라보면 비트가 아니라 프레임이라고 데이터를 칭한다.
	사진을 보면 앞 흐름과 같이 라우터를 통해 프레임 데이터가 흐르는 걸 볼 수 있고

인캡슐레이션,디캡슐레이션 과정 역시 1계층~2계층 사이에서만 일어나는 것을 볼 수 있다.

그림 2.12 네트워크 계층 통신 > Datagram 그림 관점에서 보면

앞에서 OSI 7계층을 보면 전송되는 데이터 단위를 Packets이라고 불렀다.
이 Packets을 네트워크 계층에서 전달할 때 연결형/비연결형 서비스로 나뉜다.

이 차이는 실제 데이터를 전달하기 전에 송수신간의 미리 연결된 데이터를 보내느냐 아니냐 차이인데,
Packet을 전달함에 있어서 비연결형으로 보내는 것을 Datagram이라 칭한다.

일단 현 단계 에서는 Packet을 Datagram으로 부를 수 있다고만 기억.
즉, 데이터 단위로 봤을때 Packet 혹은 Datagram 으로 보내고 있다라고 말 할 수 있다.
+인캡슐레이션과 디캡슐레이션 역시 1~3계층까지 이루어진다는 것도 알 수 있다.

  여기서 짚고 넘어가야 할 점 라우터의 기능은 말 그대로 라우팅. 경로제어를 말하는데
 A만 보낸 Datagram이 R1에 도착했을때 최종 B에 보낼 경로를 어떻게 결정하느냐에 따른 동작을 라우팅이라 한다.
 (이런 동작을 하게끔 하는 디바이스를 라우터라 한다.)

지금 그림에서 보이는 길은 2가지이다 R1에서 R2를 통해 가는 길, R3를 통해 가는 길
어떤 좋은길을 결정할지는 R1(라우터)가  Network계층에서 결정한다. 

그러니까 1~2계층에서는 R1에서 R3로 가는 길이 이미 정해져 있는 듯 했으나 실제로 비트들과 2계층의 Frame이 R2로 가지않고 R3로 간 것은
Network계층에서 결정한다에서 그것을 결정 한 것이다.

+ OSI계층에서 물리계층은 구조화 되지 않은 비트스트림의 전송이라 했고 2계층 부터는 구조화 하여 데이터를 Frame, 3계층에서는 Packet 혹은 Datagram이라 부름

그리고 2계층에서 사용하는 주소는 MAC주소 또는 물리주소라 부르고
3계층에서 사용하는 주소를 논리주소라 부르고 TCP/IP에서의 3계층에 사용되는 주소는 IP주소라고 한다.

IP주소가 송수신 간의 이메일 주소와 IP주소가 각각 MAC은 프레임의 헤더의 필드로 들어가고 
송수신 IP 주소는 Packet 혹은 Datagram의 헤더의 송수신 IP주소로 들어가게 된다.


뒤 이어 동일한 데이터 통신 흐름을 transport계층 즉 전송 계층에서 보이는 관점은 

 	//사진첨부(ㄱ-5 참조)

참고로 그림2.13 전송 계층 통신에 사용되는 단위를 Segment라고도 한다.

여기서의 차이점은 4계층에서부터 1계층 사이의 인캡슐레이션이 이루어졌고
디캡슐레이션은 역시 3계층까지밖에 이루어지지 않은것을 확인 할 수 있다.

마찬가지로 3계층까지밖에 이루어지지 않았기에 인캡슐레이션도 3계층부터 시작이 되는 것을 알 수 있다.

최종목적지는 Transport 계층 즉 4계층까지 이미 바라봤기에 이럴때는 4계층까지 디캡슐레이션이 이루어진다.


동일한 환경을 그림 2.14응용 계층 통신 에서 볼때
5계층까지 이루어졌으니 5계층부터 인캡슐레이션이 이루어지고 이후에 디캡슐레이션/인캡슐레이션 반복은 역시 3계층까지/부터 이루어진다.
최종목적지도 위와 동일하게 먼저 바라봤던 5계층까지 디캡슐레이션이 이루어지는 것을 볼 수 있다.

데이터 단위는 1계층에서 보내는걸 비트, 2계층에선 Frame, 3계층에선 Packet or Datagram 위와 동일하다.

+4계층은 Segment라고 한다면 마지막 5계층에서 보내는 데이터 단위를 Message라고 칭한다.



